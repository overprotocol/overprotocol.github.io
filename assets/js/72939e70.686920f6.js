"use strict";(self.webpackChunkover_docs=self.webpackChunkover_docs||[]).push([[974],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var r=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(a),m=o,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||n;return a?r.createElement(h,i(i({ref:t},c),{},{components:a})):r.createElement(h,i({ref:t},c))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,i=new Array(n);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<n;u++)i[u]=a[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var r=a(7294),o=a(6010);const n={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:a,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,o.Z)(n.tabItem,i),hidden:a},t)}},598:(e,t,a)=>{a.d(t,{Z:()=>b});var r=a(7462),o=a(7294),n=a(6010),i=a(2466),l=a(6550),s=a(1980);var u=a(12);function c(e){return function(e){return o.Children.map(e,(e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:o}}=e;return{value:t,label:a,attributes:r,default:o}}))}function d(e){const{values:t,children:a}=e;return(0,o.useMemo)((()=>{const e=t??c(a);return function(e){const t=(void 0===(r=(e,t)=>e.value===t.value)&&(r=(e,t)=>e===t),(a=e).filter(((e,t)=>a.findIndex((t=>r(t,e)))!==t)));var a,r;if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const r=(0,l.k6)(),n=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(n),(0,o.useCallback)((e=>{if(!n)return;const t=new URLSearchParams(r.location.search);t.set(n,e),r.replace({...r.location,search:t.toString()})}),[n,r])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,n=d(e),[i,l]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:n}))),[s,c]=m({queryString:a,groupId:r}),[h,v]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,n]=(0,u.Nk)(a);return[r,(0,o.useCallback)((e=>{a&&n.set(e)}),[a,n])]}({groupId:r}),y=(()=>{const e=s??h;return p({value:e,tabValues:n})?e:null})();(0,o.useLayoutEffect)((()=>{y&&l(y)}),[y]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!p({value:e,tabValues:n}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),v(e)}),[c,v,n]),tabValues:n}}var v=a(2389);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function k(e){let{className:t,block:a,selectedValue:l,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),p=e=>{const t=e.currentTarget,a=c.indexOf(t),r=u[a].value;r!==l&&(d(t),s(r))},m=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,n.Z)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:i}=e;return o.createElement("li",(0,r.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:m,onClick:p},i,{className:(0,n.Z)("tabs__item",y.tabItem,i?.className,{"tabs__item--active":l===t})}),a??t)})))}function g(e){let{lazy:t,children:a,selectedValue:r}=e;const n=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=n.find((e=>e.props.value===r));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function f(e){const t=h(e);return o.createElement("div",{className:(0,n.Z)("tabs-container",y.tabList)},o.createElement(k,(0,r.Z)({},e,t)),o.createElement(g,(0,r.Z)({},e,t)))}function b(e){const t=(0,v.Z)();return o.createElement(f,(0,r.Z)({key:String(t)},e))}},8121:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>u,toc:()=>d});var r=a(7462),o=(a(7294),a(3905)),n=a(598),i=a(5162);const l={title:"Operate Validators",description:"Learn how to register and operate validators in the OverProtocol network. This guide covers setup, staking, and best practices to help you actively contribute to network security, earn rewards, and enhance blockchain decentralization.",lang:"en"},s=void 0,u={unversionedId:"operators/operate-validators",id:"operators/operate-validators",title:"Operate Validators",description:"Learn how to register and operate validators in the OverProtocol network. This guide covers setup, staking, and best practices to help you actively contribute to network security, earn rewards, and enhance blockchain decentralization.",source:"@site/docs/operators/operate-validators.md",sourceDirName:"operators",slug:"/operators/operate-validators",permalink:"/operators/operate-validators",draft:!1,editUrl:"https://github.com/overprotocol/overprotocol.github.io/edit/develop/docs/operators/operate-validators.md",tags:[],version:"current",frontMatter:{title:"Operate Validators",description:"Learn how to register and operate validators in the OverProtocol network. This guide covers setup, staking, and best practices to help you actively contribute to network security, earn rewards, and enhance blockchain decentralization.",lang:"en"},sidebar:"operatorsSidebar",previous:{title:"Run a Node",permalink:"/operators/run-a-node"},next:{title:"Command Line Options",permalink:"/operators/CLI-options/kairos"}},c={},d=[{value:"Welcome to OverProtocol Validators \ud83d\ude4c",id:"welcome-to-overprotocol-validators-",level:3},{value:"What to Expect as a Validator",id:"what-to-expect-as-a-validator",level:2},{value:"Your Commitment Matters",id:"your-commitment-matters",level:3},{value:"Don\u2019t Worry About Technical Skills",id:"dont-worry-about-technical-skills",level:3},{value:"Stake OVER to Secure the Network",id:"stake-over-to-secure-the-network",level:3},{value:"Operate Validators Without OverScape",id:"operate-validators-without-overscape",level:2},{value:"Option 1. Setting up Validators From Scratch",id:"option-1-setting-up-validators-from-scratch",level:2},{value:"1. Obtain OVER",id:"1-obtain-over",level:3},{value:"2. Generate Validator Keys (Mnemonics)",id:"2-generate-validator-keys-mnemonics",level:3},{value:"3. Send Deposit Transactions",id:"3-send-deposit-transactions",level:3},{value:"Option 2. Migrating your validators from OverScape",id:"option-2-migrating-your-validators-from-overscape",level:2},{value:"1. Save your validator mnemonic",id:"1-save-your-validator-mnemonic",level:3},{value:"2. Generate keystore files",id:"2-generate-keystore-files",level:3},{value:"3. Check your validators",id:"3-check-your-validators",level:3},{value:"Run Your Validator",id:"run-your-validator",level:2},{value:"Transfer Validator Keys",id:"transfer-validator-keys",level:3},{value:"Run Your Validator Client",id:"run-your-validator-client",level:3}],p={toc:d},m="wrapper";function h(e){let{components:t,...l}=e;return(0,o.kt)(m,(0,r.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"welcome-to-overprotocol-validators-"},"Welcome to OverProtocol Validators \ud83d\ude4c"),(0,o.kt)("p",null,"Operating a validator is one of the most important roles in the OverProtocol network, and by choosing this path, you\u2019ve already demonstrated your commitment to decentralization and security. Thank you for stepping up to help power the future of OverProtocol! \ud83c\udf1f"),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"what-to-expect-as-a-validator"},"What to Expect as a Validator"),(0,o.kt)("h3",{id:"your-commitment-matters"},"Your Commitment Matters"),(0,o.kt)("p",null,"Becoming a validator isn\u2019t just about running software\u2014it\u2019s about dedicating yourself to the network\u2019s long-term health and stability. Validator nodes are expected to run continuously, 24/7, ensuring that OverProtocol remains resilient and secure."),(0,o.kt)("p",null,"In the early stages of the network, there may be unique challenges as we refine and optimize the system. By participating now, you\u2019re joining a pioneering group that is laying the foundation for OverProtocol\u2019s success. Your willingness to navigate these early hurdles shows incredible dedication, and ",(0,o.kt)("strong",{parentName:"p"},"we deeply value your contribution"),". \ud83d\udcaa"),(0,o.kt)("h3",{id:"dont-worry-about-technical-skills"},"Don\u2019t Worry About Technical Skills"),(0,o.kt)("p",null,"You don\u2019t need to be a tech wizard to get started as a validator. While technical expertise can be helpful, OverProtocol is designed to make validator participation accessible to everyone:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Everyday Devices Work"),": With tools like ",(0,o.kt)("a",{parentName:"li",href:"https://over.network/overscape"},"OverScape"),", you can operate a validator on your regular desktop or laptop."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Simplified Setup"),": OverScape automates the most complex tasks, like node syncing and validator registration, so you can focus on contributing to the network."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"No Stress"),": Whether you\u2019re a blockchain novice or a seasoned pro, OverProtocol offers solutions that fit your experience level.")),(0,o.kt)("h3",{id:"stake-over-to-secure-the-network"},"Stake OVER to Secure the Network"),(0,o.kt)("p",null,"To participate as a validator, you\u2019ll need to stake OVER tokens. Staking isn\u2019t just a requirement\u2014it\u2019s a way to ensure the network remains safe and secure."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Why Staking Matters"),": Validators stake OVER as collateral to prove their commitment to the network. This mechanism incentivizes good behavior and penalizes actions that could harm the network."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"How to Get OVER"),": You can acquire OVER through exchanges or other trusted sources."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Minimum Requirement"),": Make sure you have more than 256 OVER to start staking.")),(0,o.kt)("p",null,"Your stake isn\u2019t just a economical requirement\u2014it\u2019s a tangible contribution to the decentralization and security of OverProtocol."),(0,o.kt)("h2",{id:"operate-validators-without-overscape"},"Operate Validators Without OverScape"),(0,o.kt)("p",null,"For advanced users or those who prefer manual configurations, OverProtocol provides options to set up and manage validators from scratch or migrate existing setups from OverScape. Follow the detailed instructions below based on your requirements."),(0,o.kt)("hr",null),(0,o.kt)(n.Z,{groupId:"set-up-validators",defaultValue:"scratch",values:[{label:"From Scratch",value:"scratch"},{label:"Migration from OverScape",value:"migration"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"scratch",mdxType:"TabItem"},(0,o.kt)("h2",{id:"option-1-setting-up-validators-from-scratch"},"Option 1. Setting up Validators From Scratch"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"This section is intended for users who wish to set up validator keys using command-line tools. If you already possess mnemonics or keys, please refer to the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"Migration from OverScape"))," tab for guidance on migrating your setup.")),(0,o.kt)("br",null),(0,o.kt)("h3",{id:"1-obtain-over"},"1. Obtain OVER"),(0,o.kt)("p",null,"To participate as a validator, you need more than 256 OVER tokens, stored in a single wallet address. This amount is necessary to make the deposit transaction(s) required for validator registration."),(0,o.kt)("h3",{id:"2-generate-validator-keys-mnemonics"},"2. Generate Validator Keys (Mnemonics)"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Go to the Deposit-cli Repository"),": Go to the OverProtocol ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/overprotocol/staking-deposit-cli"},"staking-deposit-cli")," repository. This tool is used for creating ",(0,o.kt)("a",{parentName:"p",href:"https://eips.ethereum.org/EIPS/eip-2335"},"EIP-2335")," format BLS12-381 keystores and a corresponding ",(0,o.kt)("inlineCode",{parentName:"p"},"deposit_data-XXXXX.json")," file.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Run CLI following the repository's ",(0,o.kt)("inlineCode",{parentName:"strong"},"README.md")),": This will complete the process of generating the mnemonic. Ensure that the generated file is kept in a safe place, as this mnemonic will be associated with all future rewards and your withdrawal amount."),(0,o.kt)("p",{parentName:"li"},"You should run the command similar to the following:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ ./deposit new-mnemonic --num_validators=1 --mnemonic_language=english --execution_address=<YOUR_WALLET_ADDRESS>\n")),(0,o.kt)("p",{parentName:"li"},"Adding ",(0,o.kt)("inlineCode",{parentName:"p"},"--execution_address=<YOUR_WALLET_ADDRESS>")," will generate deposit data with a withdrawal credential, which is required for withdrawal."))),(0,o.kt)("h3",{id:"3-send-deposit-transactions"},"3. Send Deposit Transactions"),(0,o.kt)("p",null,"You have to manually send transactions to the OverProtocol's deposit contract, in order to register the validator key.\nAs with other transactions, the transaction is sent from an account in the execution layer.\nThe execution layer's account needs 256 OVER per validator account it tries to enroll."),(0,o.kt)("p",null,"Then you should run the following-styled code in your machine to sender deposit transactions the with the validator keys generated in step 2.\nThe deposit contract's address is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"0x000000000000000000000000000000000beac017")," and the deposit contract ABI is set as the following link: ",(0,o.kt)("a",{target:"_blank",href:a(458).Z},"DepositContract.abi.json"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'const { ethers } = require("ethers"); // ethers.js v5\n\nconst provider = new ethers.providers.JsonRpcProvider(\n  "http://127.0.0.1:22000"\n); // RPC port of Kairos\n\nconst depositContractAddress = \'0x000000000000000000000000000000000beac017\';\nconst depositContractABI = require(\'./DepositContract.abi.json\');\n\n// Replace these with your own values\nasync function stake(privateKey) {\n  const wallet = new ethers.Wallet(privateKey, provider);\n\n  const stakingContract = new ethers.Contract(\n    depositContractAddress,\n    depositContractABI,\n    wallet\n  );\n\n  const amount = ethers.utils.parseEther("256");\n\n  let depositDatas;\n  depositDatas = require("./deposit_data.json"); // The deposit data you\'ve generated from step 2.\n\n  for (let i = 0; i < depositDatas.length; i++) {\n    const tx = await stakingContract.deposit(\n      "0x" + depositDatas[i].pubkey,\n      "0x" + depositDatas[i].withdrawal_credentials,\n      "0x" + depositDatas[i].signature,\n      "0x" + depositDatas[i].deposit_data_root,\n      {\n        value: amount,\n        gasLimit: 2000000,\n      }\n    );\n\n    try {\n      const receipt = await tx.wait();\n      console.log(`Transaction ${i + 1}:`);\n      console.log(`Transaction Hash: ${receipt.transactionHash}`);\n    } catch (error) {\n      console.error(`Error in transaction ${i + 1}: ${error.message}`);\n    }\n  }\n}\n\nstake(YOUR_PRIVATE_KEY_WITH_0x_PREFIX)\n')),(0,o.kt)("p",null,"If you've succeeded in registering your validator to the blockchain, you should now run your validator software.\nFollow steps 4 and 5.")),(0,o.kt)(i.Z,{value:"migration",mdxType:"TabItem"},(0,o.kt)("h2",{id:"option-2-migrating-your-validators-from-overscape"},"Option 2. Migrating your validators from OverScape"),(0,o.kt)("admonition",{type:"note"},(0,o.kt)("p",{parentName:"admonition"},"This section is designed for users who are looking to migrate their existing validator setup from OverScape. If you are setting up a validator from scratch, please see the ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"From Scratch"))," tab for detailed instructions.")),(0,o.kt)("br",null),(0,o.kt)("h3",{id:"1-save-your-validator-mnemonic"},"1. Save your validator mnemonic"),(0,o.kt)("p",null,"If you have previously set up validators through OverScape, you should already have a validator mnemonic (12 words). If you did not back up your mnemonic, OverScape allows you to retrieve it by entering your password."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Go to Settings > Node data"),": Here, you will find the option ",(0,o.kt)("inlineCode",{parentName:"li"},"Reveal validator recovery phrase"),". Click the ",(0,o.kt)("inlineCode",{parentName:"li"},"Reveal phrase")," button."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Enter your password, and backup your validator phrase"),": A password is required to encrypt your validator keystore for security.")),(0,o.kt)("h3",{id:"2-generate-keystore-files"},"2. Generate keystore files"),(0,o.kt)("p",null,"The OverProtocol ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/overprotocol/staking-deposit-cli"},"staking-deposit-cli")," supports generating validator keys from an existing mnemonic. Follow the instructions in the repository's ",(0,o.kt)("inlineCode",{parentName:"p"},"README.md")," to run the CLI."),(0,o.kt)("p",null,"Execute the command as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ ./deposit existing-mnemonic\n")),(0,o.kt)("p",null,"Follow the CLI prompts. Typically, the starting index will be ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),", as shown below:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"Please choose your language ['1. \u0627\u0644\u0639\u0631\u0628\u064a\u0629', '2. \u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac', '3. English', '4. Fran\xe7ais', '5. Bahasa melayu', '6. Italiano', '7. \u65e5\u672c\u8a9e', '8. \ud55c\uad6d\uc5b4', '9. Portugu\xeas do Brasil', '10. rom\xe2n', '11. T\xfcrk\xe7e', '12. \u7b80\u4f53\u4e2d\u6587']:  [English]:\nPlease enter your mnemonic separated by spaces (\" \"). Note: you only need to enter the first 4 letters of each word if you'd prefer.: <YOUR_VALIDATOR_MNEMONIC>\nEnter the index (key number) you wish to start generating more keys from. For example, if you've generated 4 keys in the past, you'd enter 4 here. [0]: 0\nPlease repeat the index to confirm: 0\nPlease choose how many new validators you wish to run: 1\nPlease choose the (over or testnet) network/chain name ['over', 'over_dolphin']:  [over]: over\nCreate a password that secures your validator keystore(s). You will need to re-enter this to decrypt them when you setup your Ethereum validators.:\nRepeat your keystore password for confirmation:\nCreating your keys.\nCreating your keystores:      [####################################]  1/1\nVerifying your keystores:     [####################################]  1/1\n\nSuccess!\nYour keys can be found at: <path/to/your/validator/keys>\n")),(0,o.kt)("h3",{id:"3-check-your-validators"},"3. Check your validators"),(0,o.kt)("p",null,"To ensure the correct validator keys are imported, it is highly recommended to verify whether your validators are currently active on OverProtocol. Common issues include entering an incorrect mnemonic, starting index, or selecting a different chain name."),(0,o.kt)("p",null,"Verify your validators by querying Chronos. The ",(0,o.kt)("inlineCode",{parentName:"p"},"deposit_data-*.json")," file contains the ",(0,o.kt)("inlineCode",{parentName:"p"},"pubkey")," field, which serves as a unique identifier for querying your validators."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"curl -X 'GET' \\\n  'http://127.0.0.1:3500/eth/v1/beacon/states/head/validators?id=<YOUR_PUBKEY_WITH_0x_PREFIX>' \\\n  -H 'accept: application/json'\n")),(0,o.kt)("p",null,"If your validator is active, the response will include the current state of your validator. If not, it will return an empty list."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": [\n    {\n      "index": "20000",\n      "balance": "256000000000",\n      "status": "active_ongoing",\n      "validator": {\n        "pubkey": "0x8541054c41a9a36a5ae1717e321850f9c662d61b8430b12abda89030daa301d00b925a19363375f05e5b07d43f643717",\n        "withdrawal_credentials": "0x000000000000000000000000533bf49c40cb17a1c4eb479355e1a10942feb13f",\n        "effective_balance": "256000000000",\n        "slashed": false,\n        "activation_eligibility_epoch": "289",\n        "activation_epoch": "295",\n        "exit_epoch": "18446744073709551615",\n        "principal_balance": "256000000000"\n      }\n    }\n  ],\n  "execution_optimistic": false,\n  "finalized": false\n}\n')))),(0,o.kt)("h2",{id:"run-your-validator"},"Run Your Validator"),(0,o.kt)("h3",{id:"transfer-validator-keys"},"Transfer Validator Keys"),(0,o.kt)("p",null,"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"validator")," client to import the validator keys with the command similar to the following:"),(0,o.kt)(n.Z,{groupId:"network",defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Dolphin",value:"dolphin"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"mainnet",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ validator accounts import --keys-dir=<path/to/your/validator/keys> --wallet-dir=<path/to/your/wallet/directory>\n"))),(0,o.kt)(i.Z,{value:"dolphin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"$ validator accounts import --keys-dir=<path/to/your/validator/keys> --dolphin --wallet-dir=<path/to/your/wallet/directory>\n")))),(0,o.kt)("p",null,"If you successfully imported validator keys, the result will be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-plaintext"},"Importing accounts, this may take a while...\nImporting accounts... 100% [==========================================================]  [0s:0s]\n[2024-06-04 15:41:33]  INFO local-keymanager: Successfully imported validator key(s) publicKeys=<YOUR_VALIDATOR_PUBKEYS>\n[2024-06-04 15:41:33]  INFO accounts: Imported accounts <YOUR_VALIDATOR_PUBKEYS>, view all of them by running `accounts list`\n")),(0,o.kt)("h3",{id:"run-your-validator-client"},"Run Your Validator Client"),(0,o.kt)("admonition",{title:"Running a Validator and Beacon Node on a separate machine",type:"warning"},(0,o.kt)("p",{parentName:"admonition"},"When your are running a Validator and a Beacon Node on a separate machine, it is highly recommended to use Secure gRPC connections for security measures. Please refer to this ",(0,o.kt)("a",{parentName:"p",href:"./advanced-guides/secure-grpc-connections"},"page")," for specified configurations.")),(0,o.kt)("br",null),"Run `validator` client to run the validator on your node like following:",(0,o.kt)(n.Z,{groupId:"network",defaultValue:"mainnet",values:[{label:"Mainnet",value:"mainnet"},{label:"Dolphin",value:"dolphin"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"mainnet",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"$ validator --wallet-dir=<path/to/your/wallet/directory> --suggested-fee-recipient=<YOUR_WALLET_ADDRESS>\n"))),(0,o.kt)(i.Z,{value:"dolphin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"$ validator --wallet-dir=<path/to/your/wallet/directory> --dolphin --suggested-fee-recipient=<YOUR_WALLET_ADDRESS>\n")))),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"--suggested-fee-recipient")," will allow you to earn block priority fees. If no ",(0,o.kt)("inlineCode",{parentName:"p"},"--suggested-fee-recipient")," is set neither on the validator client nor on the beacon node, the corresponding fees will be sent to the burn address, and forever lost."))}h.isMDXComponent=!0},458:(e,t,a)=>{a.d(t,{Z:()=>r});const r=a.p+"assets/files/DepositContract.abi-ab0d449547e0c66627d154559eb6b154.json"}}]);